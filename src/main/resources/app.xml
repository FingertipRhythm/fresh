<?xml version="1.0" encoding="UTF-8"?>
<beans 
xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.3.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
	">
	<!-- 配置spring -->
	<!-- 开始spring注解 -->
	<context:annotation-config></context:annotation-config>
	<!-- 配置需要扫描的包 -->
	<context:component-scan base-package="com"></context:component-scan>
	
	<!-- 配置数据源  引入propertise-数据源==获取sqlsession-->
	<bean id="configurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	<property name="locations">
	<array>
	<value>classpath:conn.propertise</value>
	</array>
	</property>
	</bean>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
	<property name="driverClassName" value="${mydriver}" ></property>
	<property name="url" value="${myurl}"></property>
	<property name="username" value="${myuser}" ></property>
	<property name="password" value="${mypwd}" ></property>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	<property name="dataSource" ref="dataSource"></property>
				<!-- 引入mybatis的xml配置 -->
	<property name="configLocation"  value="classpath:mybatis_config.xml"></property>
	</bean>
	
	<mvc:default-servlet-handler/>
	<!-- 将图片和js放过去 -->
	<mvc:resources location="/images/" mapping="/images/**" />
	<mvc:resources location="/myjs/" mapping="/myjs/**" />
	<mvc:resources location="/upload/" mapping="/upload/**" />
	<mvc:resources location="/fonts/" mapping="/fonts/**" />
	<mvc:resources location="/css/" mapping="/css/**" />
	<mvc:resources location="/data/" mapping="/data/**" />
	<mvc:resources location="/js/" mapping="/js/**" />
	<mvc:resources location="/resources/" mapping="/resources/**" />
	<mvc:resources location="/files/" mapping="/files/**" />
	<!-- 配置mvc试图解析器              转换器，转换数据类型 -->
	<mvc:annotation-driven ></mvc:annotation-driven>
	<!-- 视图处理器 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
		<property name="prefix" value="/" ></property>
		<property name="suffix" value=".jsp" ></property>
	</bean>
	
	<!-- 配置接口连接，和接口对象 -->
	<bean id="" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	<!--连接数据源 -->
	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	<!-- 生成该包下的对象 -->
	<property name="basePackage" value="com.dao"></property>
	</bean>
	
	<!-- 配置拦截器 
	<mvc:interceptors>
	<mvc:interceptor>
	<mvc:mapping path ="/**"/> 拦截器拦截的路径 
	<bean class=""></bean> 拦截器加载的类 
	</mvc:interceptor>
	
	</mvc:interceptors>
	-->
	
	<!-- 文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	<property name="defaultEncoding" value="utf-8" ></property>
	<property name="maxUploadSize" value="100000000" ></property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="dataSource"></property>
	</bean>
	
 	<!--使用注释事物  -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	 
	
	</beans> 
	